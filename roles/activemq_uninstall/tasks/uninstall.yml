---
- name: "Delete service user {{ activemq_service_user }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.user:
    state: absent
    name: "{{ activemq_service_user }}"
  when: not activemq_uninstall_skip_user

- name: "Delete service group {{ activemq_service_group }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.group:
    name: "{{ activemq_service_group }}"
    state: absent
  when: not activemq_uninstall_skip_user

- name: "Delete install location {{ activemq_dest }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.file:
    dest: "{{ activemq_dest }}"
    state: absent

- name: Set download archive path
  ansible.builtin.set_fact:
    archive: "{{ activemq_dest }}/{{ activemq.bundle }}"

- name: Check download archive path
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.stat:
    path: "{{ archive }}"
  register: archive_path

- name: "Delete archive from target nodes {{ archive }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.file:
    dest: "{{ archive }}"
    state: absent
  when: not activemq_uninstall_skip_zipfile

- name: "Check target directory: {{ activemq.home }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.stat:
    path: "{{ activemq.home }}"
  register: path_to_workdir

- name: "Delete artemis installation directory {{ activemq.home }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.file:
    dest: "{{ activemq.home }}"
    state: absent
  when: not activemq_uninstall_skip_artemis

- name: "Delete logs directory symlink /var/log/{{ activemq.service_name }}/{{ activemq.instance_name }}"
  become: "{{ activemq_install_requires_become | default(true) }}"
  ansible.builtin.file:
    state: absent
    dest: "/var/log/{{ activemq.service_name }}/{{ activemq.instance_name }}"
