---
- name: Prepare
  hosts: all
  tasks:
    - name: "Run preparation common to all scenario"
      ansible.builtin.include_tasks: ../prepare.yml

- name: Install
  hosts: all
  gather_facts: yes
  environment:
    http_proxy: "{{ lookup('env', 'PROXY') }}"
    https_proxy: "{{ lookup('env', 'PROXY') }}"
    no_proxy: "{{ lookup('env', 'NO_PROXY') }}"
  module_defaults:
    ansible.builtin.get_url:
      validate_certs: "{{ not lookup('env', 'PROXY') != '' }}"
  vars:
    activemq_service_user_home: /home/activemq
    activemq_hawtio_role: admin
    activemq_users:
      - user: amq
        password: amqbrokerpass
        roles: [ admin ]
      - user: other
        password: amqotherpass
        roles: [ consumer, producer ]
    activemq_roles:
      - name: admin
        permissions: [ createNonDurableQueue, deleteNonDurableQueue, createDurableQueue, deleteDurableQueue, createAddress, deleteAddress, consume, browse, send, manage ]
      - name: manager
        permissions: [ browse, manage ]
      - name: topicsmanager
        match: topics.#
        permissions: [ createNonDurableQueue, deleteNonDurableQueue, createDurableQueue, deleteDurableQueue, browse, manage ]
      - name: consumer
        match: topics.#
        permissions: [ consume, browse ]
      - name: producer
        match: topics.#
        permissions: [ send, browse ]
    activemq_acceptors:
      - name: artemis
        bind_address: "{{ activemq_host }}"
        bind_port: "{{ activemq_port }}"
        parameters:
          tcpSendBufferSize: 1048576
          tcpReceiveBufferSize: 1048576
          protocols: CORE,MQTT
          useEpoll: true
      - name: amqp
        scheme: tcp
        bind_address: "{{ activemq_host }}"
        bind_port: "{{ activemq_port_amqp }}"
        parameters:
          tcpSendBufferSize: 1048576
          tcpReceiveBufferSize: 1048576
          protocols: AMQP
          useEpoll: true
          amqpMinLargeMessageSize: 102400
          amqpCredits: 1000
          amqpLowCredits: 300
          amqpDuplicateDetection: true
      - name: invm
        scheme: vm
    activemq_diverts:
      - name: TESTDIVERT
        address: queue.in
        forwarding_address: queue.out
        routing_type: ANYCAST
        filter: "msgType LIKE '%ff%'"
        exclusive: True
  roles:
    - middleware_automation.amq.activemq
