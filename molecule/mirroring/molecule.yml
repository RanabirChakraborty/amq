---
driver:
  name: podman
platforms:
  - name: instance1
    image: registry.access.redhat.com/ubi9/ubi-init:latest
    pre_build_image: true
    privileged: true
    command: "/usr/sbin/init"
    network: amq
  - name: instance2
    image: registry.access.redhat.com/ubi9/ubi-init:latest
    pre_build_image: true
    privileged: true
    command: "/usr/sbin/init"
    network: amq
provisioner:
  name: ansible
  config_options:
    defaults:
      interpreter_python: auto_silent
    ssh_connection:
      pipelining: false
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
    verify: verify.yml
  inventory:
    host_vars:
      localhost:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
      instance1:
        activemq_broker_connections:
          - uri: "tcp://instance2:{{ activemq_port }}"
            name: DC2
            sync: true
            user: amq-broker
            password: amq-broker
            operations:
              - type: mirror
                parameters:
                  queue_removal: false
      instance2:
        activemq_broker_connections:
          - uri: "tcp://instance1:{{ activemq_port }}"
            name: DC1
            sync: true
            user: amq-broker
            password: amq-broker
            operations:
              - type: mirror
                parameters:
                  queue_removal: false
  env:
    ANSIBLE_FORCE_COLOR: "true"
    PROXY: "${PROXY}"
    NO_PROXY: "${NO_PROXY}"
verifier:
  name: ansible
scenario:
  test_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
